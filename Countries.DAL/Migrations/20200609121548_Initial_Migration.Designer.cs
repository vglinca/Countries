// <auto-generated />
using Countries.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Countries.DAL.Migrations
{
    [DbContext(typeof(CountriesDbContext))]
    [Migration("20200609121548_Initial_Migration")]
    partial class Initial_Migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Countries.Domain.Entities.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alpha2Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alpha3Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<string>("Capital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumericCode")
                        .HasColumnType("int");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint");

                    b.Property<string>("SubRegion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Alpha2Code = "EE",
                            Alpha3Code = "EST",
                            Area = 45227.0,
                            Capital = "Tallinn",
                            CurrencyId = 1L,
                            Name = "Estonia",
                            NumericCode = 233,
                            Population = 1315944,
                            RegionId = 1L,
                            SubRegion = "Northern Europe"
                        },
                        new
                        {
                            Id = 2L,
                            Alpha2Code = "AL",
                            Alpha3Code = "ALB",
                            Area = 28748.0,
                            Capital = "Tirana",
                            CurrencyId = 2L,
                            Name = "Albania",
                            NumericCode = 8,
                            Population = 2886026,
                            RegionId = 1L,
                            SubRegion = "Southern Europe"
                        },
                        new
                        {
                            Id = 3L,
                            Alpha2Code = "CZ",
                            Alpha3Code = "CZE",
                            Area = 78865.0,
                            Capital = "Prague",
                            CurrencyId = 3L,
                            Name = "Czech Republic",
                            NumericCode = 203,
                            Population = 10558524,
                            RegionId = 1L,
                            SubRegion = "Western Europe"
                        },
                        new
                        {
                            Id = 4L,
                            Alpha2Code = "DK",
                            Alpha3Code = "DNK",
                            Area = 1393.0,
                            Capital = "Tórshavn",
                            CurrencyId = 4L,
                            Name = "Faroe Islands",
                            NumericCode = 234,
                            Population = 49376,
                            RegionId = 1L,
                            SubRegion = "Northern Europe"
                        },
                        new
                        {
                            Id = 5L,
                            Alpha2Code = "DE",
                            Alpha3Code = "DEU",
                            Area = 357114.0,
                            Capital = "Berlin",
                            CurrencyId = 1L,
                            Name = "Germany",
                            NumericCode = 276,
                            Population = 81770900,
                            RegionId = 1L,
                            SubRegion = "Western Europe"
                        },
                        new
                        {
                            Id = 6L,
                            Alpha2Code = "IS",
                            Alpha3Code = "ISL",
                            Area = 103000.0,
                            Capital = "Reykjavík",
                            CurrencyId = 5L,
                            Name = "Iceland",
                            NumericCode = 352,
                            Population = 334300,
                            RegionId = 1L,
                            SubRegion = "Northern Europe"
                        },
                        new
                        {
                            Id = 7L,
                            Alpha2Code = "JP",
                            Alpha3Code = "JPN",
                            Area = 377930.0,
                            Capital = "Tokyo",
                            CurrencyId = 6L,
                            Name = "Japan",
                            NumericCode = 392,
                            Population = 126960000,
                            RegionId = 2L,
                            SubRegion = "Eastern Asia"
                        },
                        new
                        {
                            Id = 8L,
                            Alpha2Code = "JO",
                            Alpha3Code = "JOR",
                            Area = 89342.0,
                            Capital = "Amman",
                            CurrencyId = 7L,
                            Name = "Jordan",
                            NumericCode = 400,
                            Population = 9531712,
                            RegionId = 2L,
                            SubRegion = "Western Asia"
                        },
                        new
                        {
                            Id = 9L,
                            Alpha2Code = "KW",
                            Alpha3Code = "KWT",
                            Area = 17818.0,
                            Capital = "Kuwait City",
                            CurrencyId = 8L,
                            Name = "Kuwait",
                            NumericCode = 414,
                            Population = 4183658,
                            RegionId = 2L,
                            SubRegion = "Western Asia"
                        },
                        new
                        {
                            Id = 10L,
                            Alpha2Code = "MY",
                            Alpha3Code = "MYS",
                            Area = 45227.0,
                            Capital = "Kuala Lumpur",
                            CurrencyId = 9L,
                            Name = "Malaysia",
                            NumericCode = 458,
                            Population = 31405416,
                            RegionId = 2L,
                            SubRegion = "South-Eastern Asia"
                        },
                        new
                        {
                            Id = 11L,
                            Alpha2Code = "CA",
                            Alpha3Code = "CAN",
                            Area = 9984670.0,
                            Capital = "Ottawa",
                            CurrencyId = 10L,
                            Name = "Canada",
                            NumericCode = 124,
                            Population = 36155487,
                            RegionId = 5L,
                            SubRegion = "North America"
                        },
                        new
                        {
                            Id = 12L,
                            Alpha2Code = "AR",
                            Alpha3Code = "ARG",
                            Area = 2780400.0,
                            Capital = "Buenos Aires",
                            CurrencyId = 11L,
                            Name = "Argentina",
                            NumericCode = 414,
                            Population = 43590400,
                            RegionId = 5L,
                            SubRegion = "South America"
                        },
                        new
                        {
                            Id = 13L,
                            Alpha2Code = "BO",
                            Alpha3Code = "BOL",
                            Area = 1098581.0,
                            Capital = "Sucre",
                            CurrencyId = 12L,
                            Name = "Bolivia",
                            NumericCode = 68,
                            Population = 10985059,
                            RegionId = 5L,
                            SubRegion = "South America"
                        });
                });

            modelBuilder.Entity("Countries.Domain.Entities.CountryLanguage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<long>("LanguageId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("LanguageId");

                    b.ToTable("CountryLanguages");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CountryId = 1L,
                            LanguageId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CountryId = 2L,
                            LanguageId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CountryId = 3L,
                            LanguageId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CountryId = 3L,
                            LanguageId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CountryId = 4L,
                            LanguageId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CountryId = 5L,
                            LanguageId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CountryId = 6L,
                            LanguageId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            CountryId = 7L,
                            LanguageId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            CountryId = 8L,
                            LanguageId = 9L
                        },
                        new
                        {
                            Id = 10L,
                            CountryId = 9L,
                            LanguageId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            CountryId = 10L,
                            LanguageId = 11L
                        },
                        new
                        {
                            Id = 12L,
                            CountryId = 11L,
                            LanguageId = 12L
                        },
                        new
                        {
                            Id = 13L,
                            CountryId = 11L,
                            LanguageId = 13L
                        },
                        new
                        {
                            Id = 14L,
                            CountryId = 12L,
                            LanguageId = 14L
                        },
                        new
                        {
                            Id = 15L,
                            CountryId = 12L,
                            LanguageId = 15L
                        },
                        new
                        {
                            Id = 16L,
                            CountryId = 13L,
                            LanguageId = 14L
                        },
                        new
                        {
                            Id = 17L,
                            CountryId = 13L,
                            LanguageId = 16L
                        },
                        new
                        {
                            Id = 18L,
                            CountryId = 13L,
                            LanguageId = 17L
                        });
                });

            modelBuilder.Entity("Countries.Domain.Entities.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "EUR",
                            Name = "Euro"
                        },
                        new
                        {
                            Id = 2L,
                            Code = "ALL",
                            Name = "Albanian lek"
                        },
                        new
                        {
                            Id = 3L,
                            Code = "CZK",
                            Name = "Czech koruna"
                        },
                        new
                        {
                            Id = 4L,
                            Code = "DKK",
                            Name = "Danish krone"
                        },
                        new
                        {
                            Id = 5L,
                            Code = "ISK",
                            Name = "Icelandic króna"
                        },
                        new
                        {
                            Id = 6L,
                            Code = "JPY",
                            Name = "Japanese yen"
                        },
                        new
                        {
                            Id = 7L,
                            Code = "JOD",
                            Name = "Jordanian dinar"
                        },
                        new
                        {
                            Id = 8L,
                            Code = "KWD",
                            Name = "Kuwaiti dinar"
                        },
                        new
                        {
                            Id = 9L,
                            Code = "MYR",
                            Name = "Malaysian ringgit"
                        },
                        new
                        {
                            Id = 10L,
                            Code = "CAD",
                            Name = "Canadian dollar"
                        },
                        new
                        {
                            Id = 11L,
                            Code = "ARS",
                            Name = "Argentine peso"
                        },
                        new
                        {
                            Id = 12L,
                            Code = "BOB",
                            Name = "Bolivian boliviano"
                        });
                });

            modelBuilder.Entity("Countries.Domain.Entities.Language", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Iso639_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iso639_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Iso639_1 = "et",
                            Iso639_2 = "est",
                            Name = "Estonian"
                        },
                        new
                        {
                            Id = 2L,
                            Iso639_1 = "sq",
                            Iso639_2 = "sqi",
                            Name = "Albanian"
                        },
                        new
                        {
                            Id = 3L,
                            Iso639_1 = "cs",
                            Iso639_2 = "ces",
                            Name = "Czech"
                        },
                        new
                        {
                            Id = 4L,
                            Iso639_1 = "sk",
                            Iso639_2 = "slk",
                            Name = "Slovak"
                        },
                        new
                        {
                            Id = 5L,
                            Iso639_1 = "fo",
                            Iso639_2 = "fao",
                            Name = "Faroese"
                        },
                        new
                        {
                            Id = 6L,
                            Iso639_1 = "de",
                            Iso639_2 = "deu",
                            Name = "German"
                        },
                        new
                        {
                            Id = 7L,
                            Iso639_1 = "is",
                            Iso639_2 = "isl",
                            Name = "Icelandic"
                        },
                        new
                        {
                            Id = 8L,
                            Iso639_1 = "ja",
                            Iso639_2 = "jpn",
                            Name = "Japanese"
                        },
                        new
                        {
                            Id = 9L,
                            Iso639_1 = "ar",
                            Iso639_2 = "ara",
                            Name = "Arabic"
                        },
                        new
                        {
                            Id = 10L,
                            Iso639_1 = "ar",
                            Iso639_2 = "ara",
                            Name = "Arabic"
                        },
                        new
                        {
                            Id = 11L,
                            Iso639_1 = "",
                            Iso639_2 = "zsm",
                            Name = "Malaysian"
                        },
                        new
                        {
                            Id = 12L,
                            Iso639_1 = "en",
                            Iso639_2 = "eng",
                            Name = "English"
                        },
                        new
                        {
                            Id = 13L,
                            Iso639_1 = "fr",
                            Iso639_2 = "fra",
                            Name = "French"
                        },
                        new
                        {
                            Id = 14L,
                            Iso639_1 = "es",
                            Iso639_2 = "spa",
                            Name = "Spanish"
                        },
                        new
                        {
                            Id = 15L,
                            Iso639_1 = "gn",
                            Iso639_2 = "grn",
                            Name = "Guarani"
                        },
                        new
                        {
                            Id = 16L,
                            Iso639_1 = "ay",
                            Iso639_2 = "aym",
                            Name = "Aymara"
                        },
                        new
                        {
                            Id = 17L,
                            Iso639_1 = "qu",
                            Iso639_2 = "que",
                            Name = "Quechua"
                        });
                });

            modelBuilder.Entity("Countries.Domain.Entities.Region", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Area = 10180000.0,
                            Name = "Europe"
                        },
                        new
                        {
                            Id = 2L,
                            Area = 44580000.0,
                            Name = "Asia"
                        },
                        new
                        {
                            Id = 3L,
                            Area = 8526000.0,
                            Name = "Australia and Oceania"
                        },
                        new
                        {
                            Id = 4L,
                            Area = 30370000.0,
                            Name = "Africa"
                        },
                        new
                        {
                            Id = 5L,
                            Area = 42550000.0,
                            Name = "Americas"
                        });
                });

            modelBuilder.Entity("Countries.Domain.Entities.Country", b =>
                {
                    b.HasOne("Countries.Domain.Entities.Currency", "Currency")
                        .WithMany("Countries")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Countries.Domain.Entities.Region", "Region")
                        .WithMany("Countries")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Countries.Domain.Entities.CountryLanguage", b =>
                {
                    b.HasOne("Countries.Domain.Entities.Country", "Country")
                        .WithMany("CountryLanguages")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Countries.Domain.Entities.Language", "Language")
                        .WithMany("CountryLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
